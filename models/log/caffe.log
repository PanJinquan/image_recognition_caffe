I0723 01:45:56.585803 11596 caffe.cpp:197] Use CPU.
I0723 01:45:56.586180 11596 solver.cpp:45] Initializing solver from parameters: 
test_iter: 30
test_interval: 200
base_lr: 0.1
display: 50
max_iter: 5000
lr_policy: "step"
gamma: 0.1
momentum: 0.9
weight_decay: 0.0005
stepsize: 1000
snapshot: 1000
snapshot_prefix: "models/caffenet_spp/caffenet_spp"
solver_mode: CPU
net: "config/caffenet_spp/train_val.prototxt"
train_state {
  level: 0
  stage: ""
}
delta: 1e-06
type: "AdaDelta"
I0723 01:45:56.586290 11596 solver.cpp:102] Creating training net from net file: config/caffenet_spp/train_val.prototxt
I0723 01:45:56.586583 11596 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer data
I0723 01:45:56.586608 11596 net.cpp:294] The NetState phase (0) differed from the phase (1) specified by a rule in layer accuracy
I0723 01:45:56.586740 11596 net.cpp:51] Initializing net from parameters: 
name: "CaffeNet"
state {
  phase: TRAIN
  level: 0
  stage: ""
}
layer {
  name: "data"
  type: "Data"
  top: "data"
  top: "label"
  include {
    phase: TRAIN
  }
  transform_param {
    mirror: true
    mean_value: 104
    mean_value: 117
    mean_value: 123
  }
  data_param {
    source: "dataset/train_lmdb"
    batch_size: 2
    backend: LMDB
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "data"
  top: "conv1"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu1"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "pool1"
  type: "Pooling"
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm1"
  type: "LRN"
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "norm1"
  top: "conv2"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu2"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "pool2"
  type: "Pooling"
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layer {
  name: "norm2"
  type: "LRN"
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "norm2"
  top: "conv3"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "relu3"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv4"
  type: "Convolution"
  bottom: "conv3"
  top: "conv4"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu4"
  type: "ReLU"
  bottom: "conv4"
  top: "conv4"
}
layer {
  name: "conv5"
  type: "Convolution"
  bottom: "conv4"
  top: "conv5"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu5"
  type: "ReLU"
  bottom: "conv5"
  top: "conv5"
}
layer {
  name: "spatial_pyramid_pooling"
  type: "SPP"
  bottom: "conv5"
  top: "pool5"
  spp_param {
    pyramid_height: 2
    pool: MAX
  }
}
layer {
  name: "fc6"
  type: "InnerProduct"
  bottom: "pool5"
  top: "fc6"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu6"
  type: "ReLU"
  bottom: "fc6"
  top: "fc6"
}
layer {
  name: "drop6"
  type: "Dropout"
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc7"
  type: "InnerProduct"
  bottom: "fc6"
  top: "fc7"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 512
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
}
layer {
  name: "relu7"
  type: "ReLU"
  bottom: "fc7"
  top: "fc7"
}
layer {
  name: "drop7"
  type: "Dropout"
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  name: "fc8"
  type: "InnerProduct"
  bottom: "fc7"
  top: "fc8"
  param {
    lr_mult: 1
    decay_mult: 1
  }
  param {
    lr_mult: 2
    decay_mult: 0
  }
  inner_product_param {
    num_output: 5
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8"
  bottom: "label"
  top: "loss"
}
I0723 01:45:56.586911 11596 layer_factory.hpp:77] Creating layer data
I0723 01:45:56.586988 11596 db_lmdb.cpp:35] Opened lmdb dataset/train_lmdb
I0723 01:45:56.587007 11596 net.cpp:84] Creating Layer data
I0723 01:45:56.587013 11596 net.cpp:380] data -> data
I0723 01:45:56.587026 11596 net.cpp:380] data -> label
I0723 01:45:56.588464 11596 data_layer.cpp:45] output data size: 2,3,666,500
I0723 01:45:56.588600 11596 net.cpp:122] Setting up data
I0723 01:45:56.588613 11596 net.cpp:129] Top shape: 2 3 666 500 (1998000)
I0723 01:45:56.588631 11596 net.cpp:129] Top shape: 2 (2)
I0723 01:45:56.588634 11596 net.cpp:137] Memory required for data: 7992008
I0723 01:45:56.588637 11596 layer_factory.hpp:77] Creating layer conv1
I0723 01:45:56.588646 11596 net.cpp:84] Creating Layer conv1
I0723 01:45:56.588652 11596 net.cpp:406] conv1 <- data
I0723 01:45:56.588697 11596 net.cpp:380] conv1 -> conv1
I0723 01:45:56.589467 11596 net.cpp:122] Setting up conv1
I0723 01:45:56.589491 11596 net.cpp:129] Top shape: 2 96 164 123 (3873024)
I0723 01:45:56.589498 11596 net.cpp:137] Memory required for data: 23484104
I0723 01:45:56.589514 11596 layer_factory.hpp:77] Creating layer relu1
I0723 01:45:56.589524 11596 net.cpp:84] Creating Layer relu1
I0723 01:45:56.589529 11596 net.cpp:406] relu1 <- conv1
I0723 01:45:56.589534 11596 net.cpp:367] relu1 -> conv1 (in-place)
I0723 01:45:56.589542 11596 net.cpp:122] Setting up relu1
I0723 01:45:56.589550 11596 net.cpp:129] Top shape: 2 96 164 123 (3873024)
I0723 01:45:56.589552 11596 net.cpp:137] Memory required for data: 38976200
I0723 01:45:56.589556 11596 layer_factory.hpp:77] Creating layer pool1
I0723 01:45:56.589565 11596 net.cpp:84] Creating Layer pool1
I0723 01:45:56.589567 11596 net.cpp:406] pool1 <- conv1
I0723 01:45:56.589571 11596 net.cpp:380] pool1 -> pool1
I0723 01:45:56.589592 11596 net.cpp:122] Setting up pool1
I0723 01:45:56.589598 11596 net.cpp:129] Top shape: 2 96 82 61 (960384)
I0723 01:45:56.589601 11596 net.cpp:137] Memory required for data: 42817736
I0723 01:45:56.589606 11596 layer_factory.hpp:77] Creating layer norm1
I0723 01:45:56.589614 11596 net.cpp:84] Creating Layer norm1
I0723 01:45:56.589618 11596 net.cpp:406] norm1 <- pool1
I0723 01:45:56.589624 11596 net.cpp:380] norm1 -> norm1
I0723 01:45:56.589633 11596 net.cpp:122] Setting up norm1
I0723 01:45:56.589638 11596 net.cpp:129] Top shape: 2 96 82 61 (960384)
I0723 01:45:56.589642 11596 net.cpp:137] Memory required for data: 46659272
I0723 01:45:56.589659 11596 layer_factory.hpp:77] Creating layer conv2
I0723 01:45:56.589668 11596 net.cpp:84] Creating Layer conv2
I0723 01:45:56.589673 11596 net.cpp:406] conv2 <- norm1
I0723 01:45:56.589679 11596 net.cpp:380] conv2 -> conv2
I0723 01:45:56.594864 11596 net.cpp:122] Setting up conv2
I0723 01:45:56.594895 11596 net.cpp:129] Top shape: 2 256 82 61 (2561024)
I0723 01:45:56.594915 11596 net.cpp:137] Memory required for data: 56903368
I0723 01:45:56.594939 11596 layer_factory.hpp:77] Creating layer relu2
I0723 01:45:56.594947 11596 net.cpp:84] Creating Layer relu2
I0723 01:45:56.594950 11596 net.cpp:406] relu2 <- conv2
I0723 01:45:56.594957 11596 net.cpp:367] relu2 -> conv2 (in-place)
I0723 01:45:56.594964 11596 net.cpp:122] Setting up relu2
I0723 01:45:56.594967 11596 net.cpp:129] Top shape: 2 256 82 61 (2561024)
I0723 01:45:56.594970 11596 net.cpp:137] Memory required for data: 67147464
I0723 01:45:56.594974 11596 layer_factory.hpp:77] Creating layer pool2
I0723 01:45:56.594979 11596 net.cpp:84] Creating Layer pool2
I0723 01:45:56.594981 11596 net.cpp:406] pool2 <- conv2
I0723 01:45:56.595003 11596 net.cpp:380] pool2 -> pool2
I0723 01:45:56.595026 11596 net.cpp:122] Setting up pool2
I0723 01:45:56.595031 11596 net.cpp:129] Top shape: 2 256 41 30 (629760)
I0723 01:45:56.595034 11596 net.cpp:137] Memory required for data: 69666504
I0723 01:45:56.595037 11596 layer_factory.hpp:77] Creating layer norm2
I0723 01:45:56.595043 11596 net.cpp:84] Creating Layer norm2
I0723 01:45:56.595049 11596 net.cpp:406] norm2 <- pool2
I0723 01:45:56.595053 11596 net.cpp:380] norm2 -> norm2
I0723 01:45:56.595060 11596 net.cpp:122] Setting up norm2
I0723 01:45:56.595067 11596 net.cpp:129] Top shape: 2 256 41 30 (629760)
I0723 01:45:56.595070 11596 net.cpp:137] Memory required for data: 72185544
I0723 01:45:56.595073 11596 layer_factory.hpp:77] Creating layer conv3
I0723 01:45:56.595084 11596 net.cpp:84] Creating Layer conv3
I0723 01:45:56.595089 11596 net.cpp:406] conv3 <- norm2
I0723 01:45:56.595095 11596 net.cpp:380] conv3 -> conv3
F0723 01:45:56.596890 11598 data_transformer.cpp:168] Check failed: height <= datum_height (666 vs. 318) 
*** Check failure stack trace: ***
    @     0x7f167c5a05cd  google::LogMessage::Fail()
    @     0x7f167c5a2433  google::LogMessage::SendToLog()
    @     0x7f167c5a015b  google::LogMessage::Flush()
    @     0x7f167c5a2e1e  google::LogMessageFatal::~LogMessageFatal()
    @     0x7f167ca8e01d  caffe::DataTransformer<>::Transform()
    @     0x7f167c98da9a  caffe::DataLayer<>::load_batch()
    @     0x7f167ca6f55a  caffe::BasePrefetchingDataLayer<>::InternalThreadEntry()
    @     0x7f167c963e5e  boost::detail::thread_data<>::run()
    @     0x7f1675f4a5d5  (unknown)
    @     0x7f1675b016ba  start_thread
    @     0x7f167b19f41d  clone
    @              (nil)  (unknown)
